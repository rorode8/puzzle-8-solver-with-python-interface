# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import subprocess
import os




n=3


def getInvCount(arr) :
 
    inv_count = 0
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if(arr[j]>arr[i]):
                inv_count+=1
    
    print(inv_count)
    return inv_count
     
# This function returns true 
# if given 8 puzzle is solvable. 
def isSolvable(puzzle) : 
 
    # Count inversions in given 8 puzzle 
    invCount = getInvCount(puzzle)
   
    # return true if inversion count is even. 
    return (invCount % 2 == 0)



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.clearButton = QtWidgets.QPushButton(self.centralwidget)
        self.clearButton.setGeometry(QtCore.QRect(60, 500, 221, 41))
        self.clearButton.setObjectName("clearButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(500, 500, 231, 41))
        self.pushButton_2.setObjectName("pushButton_2")
        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(280, 0, 201, 61))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label1.setFont(font)
        self.label1.setAlignment(QtCore.Qt.AlignCenter)
        self.label1.setObjectName("label1")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 80, 381, 361))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 20, 361, 331))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(400, 80, 381, 361))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.groupBox_2)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(10, 20, 361, 331))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.initialBox = []
        self.targetBox = []
        for i in range(n*n):
            self.initialBox.append(QtWidgets.QTextEdit(self.centralwidget))
            self.initialBox[i].setAlignment(QtCore.Qt.AlignCenter)
            self.targetBox.append(QtWidgets.QTextEdit(self.centralwidget))
            self.targetBox[i].setAlignment(QtCore.Qt.AlignCenter)

        positions = [(i, j) for i in range(n) for j in range(n)]

        for position, ibox, tbox in zip(positions, self.initialBox, self.targetBox):

            self.gridLayout.addWidget(ibox, *position)
            self.gridLayout_2.addWidget(tbox, *position)

        self.clearButton.clicked.connect(self.clearClick)
        self.pushButton_2.clicked.connect(self.goButton)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.clearButton.setText(_translate("MainWindow", "clear"))
        self.pushButton_2.setText(_translate("MainWindow", "start"))
        self.label1.setText(_translate("MainWindow", "slide puzzle solver"))
        self.groupBox.setTitle(_translate("MainWindow", "initial state"))
        self.groupBox_2.setTitle(_translate("MainWindow", "target state"))
        
    def clearClick(self):
        for i in range(n*n):
            print(self.initialBox[i].toPlainText())
            self.initialBox[i].clear()
            self.targetBox[i].clear()

    def goButton(self):
        startState = []
        goalState = []
        
        text = open("output1.txt",'w')
        textb = open("output2.txt",'w')
        for i in range(n):
            b=n*i
            line=""
            lineb=""
            
            
            
            for j in range(n):
                
                a1 = int(self.initialBox[b+j].toPlainText())
                a2 = int(self.targetBox[b+j].toPlainText())
                if(a1!=0):
                    startState.append(a1)
                if(a2!=0):                    
                    goalState.append( a2)
                
                line+=self.initialBox[b+j].toPlainText()+" "
                lineb+=self.targetBox[b+j].toPlainText()+" "
            line = line[:-1]+"\n"
            lineb = lineb[:-1]+"\n"
            text.write(line)
            textb.write(lineb)
            
        flag1=  isSolvable(startState)
        flag2 = isSolvable(goalState)
        print(flag1)
        print(flag2)
        if(flag1 != flag2):
            print()
            msg = QMessageBox()
            msg.setWindowTitle("not solvable puzzle")
            msg.setText("the puzzle you entered can't reach the goal state you want")
            x = msg.exec_()
            
            
            
            return
        
        text.close()
        textb.close()
        try:
            os.remove("lispOutput.txt")
        except OSError:
                pass
        subprocess.call([r'load.bat'])
        subprocess.call([r'aaa.bat'])
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
